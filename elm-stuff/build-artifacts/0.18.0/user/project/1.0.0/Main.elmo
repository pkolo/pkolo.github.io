var _user$project$Main$filterByTech = F2(
	function (model, tech) {
		var newProjects = A2(
			_elm_lang$core$List$filter,
			function (p) {
				return A2(_elm_lang$core$List$member, tech, p.technologies);
			},
			model.projects);
		return _elm_lang$core$Native_Utils.update(
			model,
			{projects: newProjects});
	});
var _user$project$Main$filterByCategory = F2(
	function (model, category) {
		var newProjects = A2(
			_elm_lang$core$List$filter,
			function (p) {
				return A2(_elm_lang$core$List$member, category, p.categories);
			},
			model.projects);
		return _elm_lang$core$Native_Utils.update(
			model,
			{projects: newProjects});
	});
var _user$project$Main$filterByStatus = F2(
	function (model, status) {
		var newProjects = A2(
			_elm_lang$core$List$filter,
			function (p) {
				return _elm_lang$core$Native_Utils.eq(p.status, status);
			},
			model.projects);
		return _elm_lang$core$Native_Utils.update(
			model,
			{projects: newProjects});
	});
var _user$project$Main$separator = ' | ';
var _user$project$Main$_p0 = _user$project$StyleSheet$stylesheet;
var _user$project$Main$class = _user$project$Main$_p0.$class;
var _user$project$Main$classList = _user$project$Main$_p0.classList;
var _user$project$Main$getStatus = function (project) {
	return _elm_lang$core$Native_Utils.eq(project.status, 'Active') ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$Active),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('(active)'),
			_1: {ctor: '[]'}
		}) : (_elm_lang$core$Native_Utils.eq(project.status, 'In Progress') ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$InProgress),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('(in progress)'),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$Inactive),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('(inactive)'),
			_1: {ctor: '[]'}
		}));
};
var _user$project$Main$getLink = function (project) {
	return (!_elm_lang$core$Native_Utils.eq(project.link, '')) ? A2(
		_elm_lang$html$Html$span,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$ProjectLink),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(project.link),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$target('_blank'),
						_1: {
							ctor: '::',
							_0: _user$project$Main$class(_user$project$StyleSheet$Link),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('link'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}) : _elm_lang$html$Html$text('');
};
var _user$project$Main$getSrc = function (project) {
	return (!_elm_lang$core$Native_Utils.eq(project.src_link, '')) ? A2(
		_elm_lang$html$Html$span,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$ProjectLink),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(project.src_link),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$target('_blank'),
						_1: {
							ctor: '::',
							_0: _user$project$Main$class(_user$project$StyleSheet$Link),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('src'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}) : _elm_lang$html$Html$text('');
};
var _user$project$Main$viewProject = function (project) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$ProjectInfo),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Main$class(_user$project$StyleSheet$ProjectHeader),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _user$project$Main$class(_user$project$StyleSheet$ProjectName),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(project.name),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$getStatus(project),
						_1: {
							ctor: '::',
							_0: _user$project$Main$getLink(project),
							_1: {
								ctor: '::',
								_0: _user$project$Main$getSrc(project),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Main$class(_user$project$StyleSheet$ProjectDetails),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _user$project$Main$class(_user$project$StyleSheet$ProjectDetail),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$Main$class(_user$project$StyleSheet$P),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(project.description),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _user$project$Main$class(_user$project$StyleSheet$P),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												A2(
													_elm_lang$core$Basics_ops['++'],
													'Technologies used: ',
													A2(_elm_lang$core$String$join, ', ', project.technologies))),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _user$project$Main$class(_user$project$StyleSheet$P),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													A2(
														_elm_lang$core$Basics_ops['++'],
														'File under: ',
														A2(_elm_lang$core$String$join, ', ', project.categories))),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$uniqueHelp = F3(
	function (f, existing, remaining) {
		uniqueHelp:
		while (true) {
			var _p1 = remaining;
			if (_p1.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p3 = _p1._1;
				var _p2 = _p1._0;
				var computedFirst = f(_p2);
				if (A2(_elm_lang$core$Set$member, computedFirst, existing)) {
					var _v1 = f,
						_v2 = existing,
						_v3 = _p3;
					f = _v1;
					existing = _v2;
					remaining = _v3;
					continue uniqueHelp;
				} else {
					return {
						ctor: '::',
						_0: _p2,
						_1: A3(
							_user$project$Main$uniqueHelp,
							f,
							A2(_elm_lang$core$Set$insert, computedFirst, existing),
							_p3)
					};
				}
			}
		}
	});
var _user$project$Main$unique = function (list) {
	return A3(_user$project$Main$uniqueHelp, _elm_lang$core$Basics$identity, _elm_lang$core$Set$empty, list);
};
var _user$project$Main$getTechnologies = function (projects) {
	return _elm_lang$core$List$concat(
		A2(
			_elm_lang$core$List$map,
			function (p) {
				return p.technologies;
			},
			projects));
};
var _user$project$Main$getCategories = function (projects) {
	return _elm_lang$core$List$concat(
		A2(
			_elm_lang$core$List$map,
			function (p) {
				return p.categories;
			},
			projects));
};
var _user$project$Main$getStatuses = function (projects) {
	return A2(
		_elm_lang$core$List$map,
		function (p) {
			return p.status;
		},
		projects);
};
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {bio: a, categories: b, technologies: c, statuses: d, projects: e};
	});
var _user$project$Main$Result = F2(
	function (a, b) {
		return {bio: a, projects: b};
	});
var _user$project$Main$Project = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, name: b, timeline: c, status: d, categories: e, technologies: f, link: g, src_link: h, description: i};
	});
var _user$project$Main$projectDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'description',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'src_link',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'link',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'technologies',
				_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'categories',
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'status',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'timeline',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'name',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$int,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Project))))))))));
var _user$project$Main$modelDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'projects',
	_elm_lang$core$Json_Decode$list(_user$project$Main$projectDecoder),
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'bio',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Result)));
var _user$project$Main$decodeResult = function (json) {
	var _p4 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$modelDecoder, json);
	if (_p4.ctor === 'Ok') {
		return _p4._0;
	} else {
		return {
			bio: 'Error',
			projects: {ctor: '[]'}
		};
	}
};
var _user$project$Main$initialModel = function () {
	var result = _user$project$Main$decodeResult(_user$project$Data$json);
	return {
		bio: result.bio,
		categories: _user$project$Main$unique(
			_user$project$Main$getCategories(result.projects)),
		technologies: _user$project$Main$unique(
			_user$project$Main$getTechnologies(result.projects)),
		statuses: _user$project$Main$unique(
			_user$project$Main$getStatuses(result.projects)),
		projects: result.projects
	};
}();
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p5 = msg;
		switch (_p5.ctor) {
			case 'StatusFilter':
				return A2(_user$project$Main$filterByStatus, _user$project$Main$initialModel, _p5._0);
			case 'CategoryFilter':
				return A2(_user$project$Main$filterByCategory, _user$project$Main$initialModel, _p5._0);
			default:
				return A2(_user$project$Main$filterByTech, _user$project$Main$initialModel, _p5._0);
		}
	});
var _user$project$Main$TechFilter = function (a) {
	return {ctor: 'TechFilter', _0: a};
};
var _user$project$Main$techFilters = function (tech) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$FilterBtn),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Main$TechFilter(tech)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(_user$project$Main$separator),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(tech),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$CategoryFilter = function (a) {
	return {ctor: 'CategoryFilter', _0: a};
};
var _user$project$Main$categoryFilters = function (category) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$FilterBtn),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Main$CategoryFilter(category)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(_user$project$Main$separator),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(category),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$StatusFilter = function (a) {
	return {ctor: 'StatusFilter', _0: a};
};
var _user$project$Main$statusFilters = function (status) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$FilterBtn),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Main$StatusFilter(status)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(_user$project$Main$separator),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(status),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$filterBars = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$class(_user$project$StyleSheet$Sidebar),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(_elm_lang$core$List$map, _user$project$Main$statusFilters, model.statuses)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(_elm_lang$core$List$map, _user$project$Main$categoryFilters, model.categories)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(_elm_lang$core$List$map, _user$project$Main$techFilters, model.technologies)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _mdgriffith$style_elements$Style$embed(_user$project$StyleSheet$stylesheet),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Main$class(_user$project$StyleSheet$Body),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$header,
							{
								ctor: '::',
								_0: _user$project$Main$class(_user$project$StyleSheet$Header),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$Main$class(_user$project$StyleSheet$Title),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Patrick Kolodgy'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$nav,
										{
											ctor: '::',
											_0: _user$project$Main$class(_user$project$StyleSheet$Nav),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Brooklyn, NY'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html$text(_user$project$Main$separator),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html$text('pkolodgy at gmail'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html$text(_user$project$Main$separator),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$a,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$href('https://github.com/pkolo'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$target('_blank'),
																		_1: {
																			ctor: '::',
																			_0: _user$project$Main$class(_user$project$StyleSheet$Link),
																			_1: {ctor: '[]'}
																		}
																	}
																},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('github'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html$text(_user$project$Main$separator),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$a,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$href('https://www.linkedin.com/in/pkolodgy/'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$target('_blank'),
																				_1: {
																					ctor: '::',
																					_0: _user$project$Main$class(_user$project$StyleSheet$Link),
																					_1: {ctor: '[]'}
																				}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('linkedin'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _user$project$Main$class(_user$project$StyleSheet$Bio),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(model.bio),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _user$project$Main$class(_user$project$StyleSheet$Container),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _user$project$Main$filterBars(model),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _user$project$Main$class(_user$project$StyleSheet$Content),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$div,
													{ctor: '[]'},
													A2(
														_elm_lang$core$List$map,
														_user$project$Main$viewProject,
														A2(
															_elm_lang$core$List$sortBy,
															function (_) {
																return _.status;
															},
															model.projects))),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{view: _user$project$Main$view, model: _user$project$Main$initialModel, update: _user$project$Main$update})();
